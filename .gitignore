# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
.nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder vol/
# IPython
profile_default/
ipython_config.py

# pybabel
.babel

# Jupyter Notebook
.ipynb_checkpoints

# Jupyter Datafiles
jupyter_nbconvert_config.json

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having trouble regarding this file, include it
#   in the .gitignore file again and perform the following:
#
#   $ pipenv lock --clear
#   $ pipenv install --deploy --ignore-pipfile
#
# Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially important if you are using pyproject.toml (poetry) instead of setup.py
#   to define dependencies, where the lock file is essential for reproducible builds.
#
# poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#
# pdm.lock
#   pdm.frozen.lock (see https://pdm.fyi/using-pdm/project/#lock-file)

# PEP 582; used by e.g. github/codeql
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.ENV

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
.pyre_configuration

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment all of this section, and remove specific
#  entries as needed.

# JetBrains / IntelliJ platform: https://www.jetbrains.com/help/pycharm/filetypes.html#workspace
.idea/{*.name,*.iws,*}
.idea/; # TODO: re-include if you delete vbcsproj and projectreference.csproj files
.idea/**/workspace.xml
.idea/**/usage.statistics.xml
.idea/**/tasks.xml
.idea/**/ *.iml
.idea/**/contentModel.xml

# JetBrains / IntelliJ platform: User-specific additions
# Reference: https://www.jetbrains.com/help/pycharm/filetypes.html#workspace
# User-specific additions
.idea/**/ .name
.idea/**/ .iws
.idea/**/ .iml
.idea/**/ wsync.xml
.idea/**/ todo.xml
.idea/**/ deployment.xml
.idea/**/ content.xml
.idea/**/ .gitignore
.idea/**/ .gitignore
.idea/**/ .name
.idea/**/ .iws
.idea/**/ .iml
.idea/**/ wsync.xml
.idea/**/ todo.xml
.idea/**/ deployment.xml
.idea/**/ content.xml
.idea/**/ .gitignore
.idea/**/ .gitignore

# Sensitive tools
.DS_Store

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Virtualenv
# Virtualenv's in-project .venv is never committed, see
# https://manpages.ubuntu.com/manpages/focal/man1/virtualenv.1.html# . Plan to add .venv to .gitignore.
.venv

# Environment variables
.env

# Project-specific ignores
# Generated model files (retrain on clone)
*.npy

# Streamlit cache and secrets
.streamlit/cache
.streamlit/secrets.toml

# Logs
*.log

# IDE-specific (uncomment if using)
# .vscode/*
# .vscode/settings.json